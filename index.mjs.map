{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/accessors.js","../lib/mediansorted.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor';\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport accessors from './accessors.js';\n\n\n// MAIN //\n\n/**\n* Computes the median value of a sorted strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - sorted input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} median value\n*\n* @example\n* var x = [ 2.0, -3.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = mediansorted( 4, x, 2, 1 );\n* // returns 0.0\n*/\nfunction mediansorted( N, x, strideX, offsetX ) {\n\tvar n;\n\tvar m;\n\tvar o;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, strideX, offsetX );\n\t}\n\tn = N / 2;\n\tm = floor( n );\n\tif ( n === m ) {\n\t\t// Even number of elements...\n\t\treturn ( x[ offsetX+(m*strideX) ] + x[ offsetX+((m-1)*strideX) ] ) / 2.0;\n\t}\n\t// Odd number of elements...\n\treturn x[ offsetX+(m*strideX) ];\n}\n\n\n// EXPORTS //\n\nexport default mediansorted;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor';\n\n\n// MAIN //\n\n/**\n* Computes the median value of a sorted strided array.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - strideX length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} median value\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = toAccessorArray( [ 2.0, -3.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = mediansorted( 4, arraylike2object( x ), 2, 1 );\n* // returns 0.0\n*/\nfunction mediansorted( N, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar xget;\n\tvar n;\n\tvar m;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\n\t// Cache references to element accessors:\n\txget = x.accessors[ 0 ];\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tn = N / 2;\n\tm = floor( n );\n\tif ( n === m ) {\n\t\t// Even number of elements...\n\t\treturn ( xget( xbuf, offsetX+(m * strideX) ) + xget( xbuf, offsetX+((m-1) * strideX) ) ) / 2.0;\n\t}\n\t// Odd number of elements...\n\treturn xget( xbuf, offsetX+(m * strideX) );\n}\n\n\n// EXPORTS //\n\nexport default mediansorted;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the median value of a sorted strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - sorted input array\n* @param {integer} strideX - strideX length\n* @returns {number} median value\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0 ];\n*\n* var v = mediansorted( x.length, x, 1 );\n* // returns 2.0\n*/\nfunction mediansorted( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default mediansorted;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport mediansorted from './mediansorted.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( mediansorted, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default mediansorted;\n"],"names":["mediansorted","N","x","strideX","offsetX","n","m","o","NaN","arraylike2object","accessorProtocol","xbuf","xget","data","accessors","floor","ndarray","stride2offset","setReadOnly"],"mappings":";;qaA4CA,SAASA,EAAcC,EAAGC,EAAGC,EAASC,GACrC,IAAIC,EACAC,EACAC,EAEJ,OAAKN,GAAK,EACFO,KAERD,EAAIE,EAAkBP,IACfQ,iBCLR,SAAuBT,EAAGC,EAAGC,EAASC,GACrC,IAAIO,EACAC,EACAP,EACAC,EAQJ,OALAK,EAAOT,EAAEW,KAGTD,EAAOV,EAAEY,UAAW,GAEfb,GAAK,EACFO,KAERH,EAAIJ,EAAI,MACRK,EAAIS,EAAOV,KAGDO,EAAMD,EAAMP,EAASE,EAAIH,GAAaS,EAAMD,EAAMP,GAAUE,EAAE,GAAKH,IAAe,EAGrFS,EAAMD,EAAMP,EAASE,EAAIH,EACjC,CDjBSW,CAAWb,EAAGM,EAAGJ,EAASC,IAElCC,EAAIJ,EAAI,MACRK,EAAIS,EAAOV,KAGDH,EAAGE,EAASE,EAAEH,GAAaD,EAAGE,GAAUE,EAAE,GAAGH,IAAe,EAG/DD,EAAGE,EAASE,EAAEH,EACtB,CEtBA,SAASH,EAAcC,EAAGC,EAAGC,GAC5B,OAAOa,EAASf,EAAGC,EAAGC,EAASc,EAAehB,EAAGE,GAClD,CCfAe,EAAAlB,EAAA,UAAAgB"}